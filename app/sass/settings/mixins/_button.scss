/*
  Button

  This button can be used for regular buttons,
  buttons with icons and buttons with only icons.
*/

@mixin button(
  $max-width: initial,
  $padding-top: 0.7rem,
  $padding-left: 1.2rem,
  $padding-bottom: 0.7rem,
  $padding-right: 1.2rem,
  $width: fit-content,
  $line-height: var(--rnb--line-height--body),
  $font-size: var(--rnb--font-size--button),
  $font-weight: var(--rnb--font-weight--regular),
  $font-family: var(--rnb--font-family--body),
  $text-transform: none,
  $background-color: var(--color--transparent),
  $background-color--hover: var(--color--white),
  $border-color: var(--color--white),
  $border-color--hover: var(--color--white),
  $color: var(--rnb--color--text),
  $color--hover: var(--rnb--color--primary),
  $color--disabled: var(--rnb--color--disabled--text),
  $background-color--disabled: var(--rnb--color--disabled--background),
  $border-color--disabled: var(--rnb--color--disabled--text),
  $border: true,
  $border-hover: true,
  $border-radius: 2.5rem,
  $border-style: solid,
  $border-width: 1px,
  $icon-margin: 0.5em,
  $icon-width: 1.25em,
  $duration: var(--rnb--transition-duration),
  $easing: var(--rnb--transition-easing)
) {
  position: relative;
  box-sizing: border-box;
  width: $width;
  max-width: $max-width;
  padding: $padding-top $padding-right $padding-bottom $padding-left;
  margin-bottom: 0;
  overflow: visible;
  font-family: $font-family;
  font-size: $font-size;
  font-weight: $font-weight;
  line-height: $line-height;
  color: $color;
  text-decoration: none;
  text-transform: $text-transform;
  white-space: nowrap;
  appearance: none;
  cursor: pointer;

  span {
    display: inline-flex;
    gap: 0.5rem;
    align-items: center;
    justify-content: center;
  }

  // Conditional Background
  @if $background-color != false and $background-color != "unset" {
    background: linear-gradient(
      to right,
      $background-color--hover 50%,
      $background-color 50%
    );
    background-position: right bottom;
    background-size: 200% 100%;
  }

  // Conditional Border
  @if $border != false and $border != "unset" {
    border: $border-width $border-style $border-color;
    border-radius: $border-radius;
  }

  $transitions:
    color $duration $easing,
    border-color $duration $easing;

  @if $background-color != false and $background-color != "unset" {
    $transitions:
      $transitions,
      background-position $duration $easing;
  }

  transition: $transitions;

  svg {
    fill: currentcolor;
    transition: fill $duration $easing;
  }

  &:hover {
    color: $color--hover;

    @if $background-color != false and $background-color != "unset" {
      background-position: left bottom;
    }

    @if $border-hover and ($border != false and $border != "unset") {
      border-color: $border-color--hover;
    }
  }

  &[disabled] {
    color: $color--disabled;
    cursor: not-allowed;

    @if $background-color != false and $background-color != "unset" {
      background: $background-color--disabled;
    }

    @if $border != false and $border != "unset" {
      border-color: $border-color--disabled;
    }

    svg {
      fill: $color--disabled;
    }
  }

  &:focus-visible:not([disabled]) {
    outline: none;

    &::after {
      position: absolute;
      inset: -0.9375rem;
      z-index: 2;
      pointer-events: none;
      content: "";
      border: 4px solid var(--color--white);
    }
  }
}
