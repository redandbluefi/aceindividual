<?php
/**
 * Admin page settings.
 *
 * @package eternia
 */

namespace Eternia;

/**
 * Add Redirection plugin settings page into admin bar for Content Manager role.
 */
function redirect_plugin_access_to_content_managers() {
	// Check that Redirection plugin is activated.
	if ( ! is_plugin_active( 'redirection/redirection.php' ) ) {
		return;
	}

	$user = wp_get_current_user();

	if ( in_array( 'redandblue_content_manager', $user->roles, true ) ) {
		add_menu_page( __( 'Redirections', 'redandblue' ), __( 'Redirections', 'redandblue' ), 'manage_options', 'tools.php?page=redirection.php', '', 'dashicons-image-rotate', 20 );
	}
}

/**
 * Prevent deletion of the front page.
 */
function restrict_post_deletion() {
	// Get the ID of the front page.
	$front_page_id = get_option( 'page_on_front' );
	// Log the ID of the page being deleted using the global variable.
	global $post;
	if ( isset( $post ) ) {
		// Check if the user is not an administrator.
		if ( $post->ID == $front_page_id && ! current_user_can( 'administrator' ) ) {
			wp_die( 'You cannot delete the front page!' );
		}
	}
}

/**
 * This function prevents the deletion of the front page via the REST API for the Gutenberg editor.
 *
 * @param mixed           $response The current response generated by the REST API before any filters are applied.
 * @param WP_REST_Server  $server   Server instance.
 * @param WP_REST_Request $request  Request used to generate the response.
 *
 * @return mixed The original response or a WP_Error if deletion is prevented.
 */
function restrict_frontpage_rest_api_deletion( $response, $server, $request ) {

	// Check if the request method is DELETE.
	if ( $request->get_method() === 'DELETE' && strpos( $request->get_route(), '/wp/v2/pages/' ) !== false ) {
		// Get the post ID from the request.
		$post_id = (int) str_replace( '/wp/v2/pages/', '', $request->get_route() );

		// Check if the user is an admin.
		if ( ! current_user_can( 'administrator' ) ) {
			// Get the ID of the front page.
			$front_page_id = get_option( 'page_on_front' );

			// Check if the post being deleted is the front page or its translation.
			if ( $post_id == $front_page_id || pll_get_post( $post_id, pll_default_language() ) == $front_page_id ) {
				// Prevent the deletion.
				return new \WP_Error( 'rest_forbidden', translate__( 'You are not allowed to delete the front page.', 'eternia' ), array( 'status' => 403 ) );
			}
		}
	}
	return $response;
}

/**
 * Displays an admin notice when the front page is trashed.
 *
 * @return void
 */
function restrict_frontpage_admin_notice() {

	if ( isset( $_GET['trashed'] ) && absint( wp_unslash( $_GET['trashed'] ) ) ) {
		$front_page_id = get_option( 'page_on_front' );
		$trashed_ids   = array_map( 'absint', explode( ',', wp_unslash( $_GET['ids'] ) ) );

		// Check if any of the trashed pages is the front page or its translation.
		foreach ( $trashed_ids as $trashed_id ) {
			if ( $trashed_id == $front_page_id || pll_get_post( $trashed_id, pll_default_language() ) == $front_page_id ) {
				echo '<div class="error notice is-dismissible"><p>' . esc_html( translate__( 'You are not allowed to delete the front page.', 'eternia' ) ) . '</p></div>';
				break;
			}
		}
	}
}
